// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_courrier.Data;

#nullable disable

namespace back_courrier.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230601041336_FixForeignKey")]
    partial class FixForeignKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("back_courrier.Models.Courrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Expediteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceptionnisteId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReceptionnisteId");

                    b.ToTable("Courrier");
                });

            modelBuilder.Entity("back_courrier.Models.CourrierDestinataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourrierId")
                        .HasColumnType("int");

                    b.Property<int>("DepartementDestinataireId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourrierId");

                    b.HasIndex("DepartementDestinataireId");

                    b.ToTable("CourrierDestinataire");
                });

            modelBuilder.Entity("back_courrier.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Designation = "Ressource humaine"
                        },
                        new
                        {
                            Id = 2,
                            Designation = "Finance"
                        },
                        new
                        {
                            Id = 3,
                            Designation = "SI"
                        });
                });

            modelBuilder.Entity("back_courrier.Models.Historique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourrierDestinataireId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateHistorique")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourrierDestinataireId");

                    b.HasIndex("StatutId");

                    b.ToTable("Historique");
                });

            modelBuilder.Entity("back_courrier.Models.Poste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Poste");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Designation = "receptionniste"
                        },
                        new
                        {
                            Id = 2,
                            Designation = "coursier"
                        },
                        new
                        {
                            Id = 3,
                            Designation = "secretaire"
                        },
                        new
                        {
                            Id = 4,
                            Designation = "directeur"
                        });
                });

            modelBuilder.Entity("back_courrier.Models.Statut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statut");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Designation = "reçu par le receptionniste"
                        },
                        new
                        {
                            Id = 2,
                            Designation = "transferé au coursier"
                        },
                        new
                        {
                            Id = 3,
                            Designation = "transferé au sécrétaire"
                        },
                        new
                        {
                            Id = 4,
                            Designation = "livré"
                        });
                });

            modelBuilder.Entity("back_courrier.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PosteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.HasIndex("PosteId");

                    b.ToTable("Utilisateur");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartementId = 1,
                            MotDePasse = "1234",
                            Nom = "receptionniste",
                            PosteId = 1
                        },
                        new
                        {
                            Id = 2,
                            DepartementId = 1,
                            MotDePasse = "1234",
                            Nom = "coursier",
                            PosteId = 2
                        },
                        new
                        {
                            Id = 3,
                            DepartementId = 1,
                            MotDePasse = "1234",
                            Nom = "secretaire",
                            PosteId = 3
                        },
                        new
                        {
                            Id = 4,
                            DepartementId = 1,
                            MotDePasse = "1234",
                            Nom = "directeur",
                            PosteId = 4
                        });
                });

            modelBuilder.Entity("back_courrier.Models.Courrier", b =>
                {
                    b.HasOne("back_courrier.Models.Utilisateur", "Receptionniste")
                        .WithMany()
                        .HasForeignKey("ReceptionnisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receptionniste");
                });

            modelBuilder.Entity("back_courrier.Models.CourrierDestinataire", b =>
                {
                    b.HasOne("back_courrier.Models.Courrier", "Courrier")
                        .WithMany()
                        .HasForeignKey("CourrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_courrier.Models.Departement", "DepartementDestinataire")
                        .WithMany()
                        .HasForeignKey("DepartementDestinataireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courrier");

                    b.Navigation("DepartementDestinataire");
                });

            modelBuilder.Entity("back_courrier.Models.Historique", b =>
                {
                    b.HasOne("back_courrier.Models.CourrierDestinataire", "CourrierDestinataire")
                        .WithMany()
                        .HasForeignKey("CourrierDestinataireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_courrier.Models.Statut", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourrierDestinataire");

                    b.Navigation("Statut");
                });

            modelBuilder.Entity("back_courrier.Models.Utilisateur", b =>
                {
                    b.HasOne("back_courrier.Models.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_courrier.Models.Poste", "Poste")
                        .WithMany()
                        .HasForeignKey("PosteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Poste");
                });
#pragma warning restore 612, 618
        }
    }
}
